/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.foi.nwtis.hsostaric.web.podaci;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.foi.nwtis.hsostaric.konfiguracije.bp.BP_Konfiguracija;
import org.foi.nwtis.podaci.Korisnik;

/**
 *
 * @author Hrvoje Šoštarić
 */
public class KorisnikDAO {

    Connection connection;
    Statement statement;
    ResultSet resultSet;
    private BP_Konfiguracija bpk;

    public KorisnikDAO(BP_Konfiguracija bpk) {
        this.bpk = bpk;
    }

    public KorisnikDAO() {
    }

    
    private Connection dajKonenkciju() throws ClassNotFoundException, SQLException {
        String url = bpk.getServerDatabase() + bpk.getUserDatabase();
        String bpkorisnik = bpk.getUserUsername();
        String bplozinka = bpk.getUserPassword();
        Class.forName(bpk.getDriverDatabase(url));
        return DriverManager.getConnection(url, bpkorisnik, bplozinka);
    }

    public Korisnik dohvatiKorisnika() {
        Korisnik k = null;
        try {

            try (Connection con = dajKonenkciju();
                    Statement s = con.createStatement();
                    ResultSet rs = s.executeQuery("Select *from Korisnici")) {
                while (rs.next()) {

                    String korime = rs.getString("kor_ime");
                    String ime = rs.getString("ime");
                    String prezime = rs.getString("prezime");
                    String email = rs.getString("EMAIL_ADRESA");
                    Timestamp kreiran = rs.getTimestamp("datum_kreiranja");
                    Timestamp promjena = rs.getTimestamp("datum_promjene");
                    k = new Korisnik(korime, ime, prezime, "********", email, kreiran, promjena);
                    return k;
                }

            }
        } catch (SQLException | ClassNotFoundException ex) {

        }
        System.out.println("Prazno");
        return null;
    }

    public boolean dodajKorisnika(Korisnik k, String lozinka, BP_Konfiguracija bpk) {
        String url = bpk.getServerDatabase() + bpk.getUserDatabase();
      
        String upit = "INSERT INTO korisnici (IME, PREZIME, EMAIL_ADRESA, KOR_IME, LOZINKA, DATUM_KREIRANJA, DATUM_PROMJENE) VALUES ("
                + "'" + k.getIme() + "', '" + k.getPrezime()
                + "', '" + k.getEmailAdresa() + "', '" + k.getKorIme() + "', '" + lozinka + "', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)";

        try (
                Connection con = dajKonenkciju();
                Statement s = con.createStatement()) {

            int brojAzuriranja = s.executeUpdate(upit);
            return brojAzuriranja == 1;
        } catch (SQLException ex) {

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(KorisnikDAO.class.getName()).log(Level.SEVERE, null, ex);
        }

        return false;
    }

    public boolean azurirajKorisnika(Korisnik k, String lozinka, BP_Konfiguracija bpk) {

        String upit = "UPDATE korisnici SET IME = '" + k.getIme() + "', PREZIME = '" + k.getPrezime()
                + "', EMAIL_ADRESA = '" + k.getEmailAdresa() + "', LOZINKA = '" + k.getLozinka() + "' WHERE "
                + "KOR_IME = '" + k.getKorIme() + "'";

        try {
            try (
                    Connection con = dajKonenkciju();
                    Statement s = con.createStatement()) {

                int brojAzuriranja = s.executeUpdate(upit);

                return brojAzuriranja == 1;

            } catch (SQLException ex) {

            }
        } catch (ClassNotFoundException ex) {

        }
        return false;
    }
}
